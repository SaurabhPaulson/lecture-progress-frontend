{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gizmeon\\\\Perpetual\\\\Project\\\\Test-2\\\\lecture-progress-frontend\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport ProgressTracker from '../components/ProgressTracker';\nimport VideoPlayer from '../components/VideoPlayer';\n\n// Use file name as video ID for demo (in production, use a hash or backend ID)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialVideos = [{\n  id: 'lecture1',\n  name: 'Sample Lecture',\n  src: '/sample.mp4'\n}];\nconst Home = () => {\n  _s();\n  const [videos, setVideos] = useState(initialVideos);\n  const [selectedVideo, setSelectedVideo] = useState(initialVideos[0]);\n  const [intervals, setIntervals] = useState([]);\n  const [videoDuration, setVideoDuration] = useState(0);\n  const fileInputRef = useRef();\n\n  // Progress and duration are updated by VideoPlayer\n  const handleProgressUpdate = (newIntervals, duration) => {\n    setIntervals(newIntervals);\n    setVideoDuration(duration);\n  };\n\n  // When switching, do not reset intervals—let VideoPlayer fetch and update\n  const handleSelectVideo = video => {\n    setSelectedVideo(video);\n  };\n\n  // Use file name as ID for demo; in production, use a hash or backend-generated ID\n  const handleUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const url = URL.createObjectURL(file);\n    const id = file.name; // Use file name as ID for consistent progress\n    // If already uploaded, don't add again\n    if (videos.some(v => v.id === id)) {\n      setSelectedVideo(videos.find(v => v.id === id));\n      return;\n    }\n    const newVideo = {\n      id,\n      name: file.name,\n      src: url\n    };\n    setVideos(prev => [...prev, newVideo]);\n    setSelectedVideo(newVideo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        margin: 24\n      },\n      children: \"Lecture Progress Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        marginBottom: 24\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Uploaded Videos:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyle: 'none',\n            padding: 0\n          },\n          children: videos.map(video => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              margin: '8px 0'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                background: selectedVideo.id === video.id ? '#76c7c0' : '#eee',\n                color: selectedVideo.id === video.id ? '#fff' : '#333',\n                border: 'none',\n                borderRadius: 6,\n                padding: '6px 16px',\n                cursor: 'pointer',\n                marginRight: 8\n              },\n              onClick: () => handleSelectVideo(video),\n              children: video.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)\n          }, video.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"video/*\",\n        ref: fileInputRef,\n        style: {\n          display: 'none'\n        },\n        onChange: handleUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fileInputRef.current.click(),\n        style: {\n          background: '#4fa3a0',\n          color: '#fff',\n          border: 'none',\n          borderRadius: 6,\n          padding: '8px 18px',\n          cursor: 'pointer'\n        },\n        children: \"Upload Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {\n      videoId: selectedVideo.id,\n      videoSrc: selectedVideo.src,\n      onProgressUpdate: handleProgressUpdate\n    }, selectedVideo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressTracker, {\n      intervals: intervals,\n      videoDuration: videoDuration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"mVV98PHxdOv2jW39OfzMJLI71bw=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","ProgressTracker","VideoPlayer","jsxDEV","_jsxDEV","initialVideos","id","name","src","Home","_s","videos","setVideos","selectedVideo","setSelectedVideo","intervals","setIntervals","videoDuration","setVideoDuration","fileInputRef","handleProgressUpdate","newIntervals","duration","handleSelectVideo","video","handleUpload","e","file","target","files","url","URL","createObjectURL","some","v","find","newVideo","prev","children","style","textAlign","margin","fileName","_jsxFileName","lineNumber","columnNumber","className","marginBottom","listStyle","padding","map","background","color","border","borderRadius","cursor","marginRight","onClick","type","accept","ref","display","onChange","current","click","videoId","videoSrc","onProgressUpdate","_c","$RefreshReg$"],"sources":["C:/Gizmeon/Perpetual/Project/Test-2/lecture-progress-frontend/src/pages/Home.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport ProgressTracker from '../components/ProgressTracker';\nimport VideoPlayer from '../components/VideoPlayer';\n\n// Use file name as video ID for demo (in production, use a hash or backend ID)\nconst initialVideos = [\n  { id: 'lecture1', name: 'Sample Lecture', src: '/sample.mp4' }\n];\n\nconst Home = () => {\n  const [videos, setVideos] = useState(initialVideos);\n  const [selectedVideo, setSelectedVideo] = useState(initialVideos[0]);\n  const [intervals, setIntervals] = useState([]);\n  const [videoDuration, setVideoDuration] = useState(0);\n  const fileInputRef = useRef();\n\n  // Progress and duration are updated by VideoPlayer\n  const handleProgressUpdate = (newIntervals, duration) => {\n    setIntervals(newIntervals);\n    setVideoDuration(duration);\n  };\n\n  // When switching, do not reset intervals—let VideoPlayer fetch and update\n  const handleSelectVideo = (video) => {\n    setSelectedVideo(video);\n  };\n\n  // Use file name as ID for demo; in production, use a hash or backend-generated ID\n  const handleUpload = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const url = URL.createObjectURL(file);\n    const id = file.name; // Use file name as ID for consistent progress\n    // If already uploaded, don't add again\n    if (videos.some(v => v.id === id)) {\n      setSelectedVideo(videos.find(v => v.id === id));\n      return;\n    }\n    const newVideo = { id, name: file.name, src: url };\n    setVideos((prev) => [...prev, newVideo]);\n    setSelectedVideo(newVideo);\n  };\n\n  return (\n    <div>\n      <h1 style={{ textAlign: 'center', margin: 24 }}>Lecture Progress Tracker</h1>\n      <div className=\"container\" style={{ marginBottom: 24 }}>\n        <div style={{ marginBottom: 12 }}>\n          <b>Uploaded Videos:</b>\n          <ul style={{ listStyle: 'none', padding: 0 }}>\n            {videos.map((video) => (\n              <li key={video.id} style={{ margin: '8px 0' }}>\n                <button\n                  style={{\n                    background: selectedVideo.id === video.id ? '#76c7c0' : '#eee',\n                    color: selectedVideo.id === video.id ? '#fff' : '#333',\n                    border: 'none',\n                    borderRadius: 6,\n                    padding: '6px 16px',\n                    cursor: 'pointer',\n                    marginRight: 8\n                  }}\n                  onClick={() => handleSelectVideo(video)}\n                >\n                  {video.name}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <input\n          type=\"file\"\n          accept=\"video/*\"\n          ref={fileInputRef}\n          style={{ display: 'none' }}\n          onChange={handleUpload}\n        />\n        <button\n          onClick={() => fileInputRef.current.click()}\n          style={{\n            background: '#4fa3a0',\n            color: '#fff',\n            border: 'none',\n            borderRadius: 6,\n            padding: '8px 18px',\n            cursor: 'pointer'\n          }}\n        >\n          Upload Video\n        </button>\n      </div>\n      <VideoPlayer\n        key={selectedVideo.id}\n        videoId={selectedVideo.id}\n        videoSrc={selectedVideo.src}\n        onProgressUpdate={handleProgressUpdate}\n      />\n      <ProgressTracker intervals={intervals} videoDuration={videoDuration} />\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gizmeon\\\\Perpetual\\\\Project\\\\Test-2\\\\lecture-progress-frontend\\\\src\\\\components\\\\ProgressTracker.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction mergeIntervals(intervals) {\n  if (!intervals.length) return [];\n  intervals.sort((a, b) => a.start - b.start);\n  const merged = [intervals[0]];\n  for (let i = 1; i < intervals.length; i++) {\n    const last = merged[merged.length - 1];\n    const curr = intervals[i];\n    if (curr.start <= last.end) {\n      last.end = Math.max(last.end, curr.end);\n    } else {\n      merged.push(curr);\n    }\n  }\n  return merged;\n}\nfunction calculateUniqueViewingTime(intervals) {\n  const merged = mergeIntervals(intervals);\n  return merged.reduce((sum, i) => sum + (i.end - i.start), 0);\n}\nconst ProgressTracker = ({\n  intervals,\n  videoDuration\n}) => {\n  const uniqueTime = calculateUniqueViewingTime(intervals || []);\n  const percent = videoDuration ? uniqueTime / videoDuration * 100 : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      marginTop: 24\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginBottom: 8\n      },\n      children: \"Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      style: {\n        marginBottom: 8,\n        height: 16,\n        background: '#eee',\n        borderRadius: 8,\n        overflow: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        style: {\n          width: `${percent}%`,\n          height: '100%',\n          background: 'linear-gradient(90deg, #76c7c0 60%, #4fa3a0 100%)',\n          transition: 'width 0.5s'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: 18,\n        fontWeight: 600\n      },\n      children: [percent.toFixed(2), \"% watched\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: 13,\n        color: '#888',\n        marginTop: 4\n      },\n      children: [\"Unique seconds watched: \", uniqueTime.toFixed(1), \" / \", videoDuration ? videoDuration.toFixed(1) : '...', \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressTracker;\nexport default ProgressTracker;\nvar _c;\n$RefreshReg$(_c, \"ProgressTracker\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","mergeIntervals","intervals","length","sort","a","b","start","merged","i","last","curr","end","Math","max","push","calculateUniqueViewingTime","reduce","sum","ProgressTracker","videoDuration","uniqueTime","percent","className","style","marginTop","children","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","height","background","borderRadius","overflow","width","transition","fontSize","fontWeight","toFixed","color","_c","$RefreshReg$"],"sources":["C:/Gizmeon/Perpetual/Project/Test-2/lecture-progress-frontend/src/components/ProgressTracker.jsx"],"sourcesContent":["import React from 'react';\n\nfunction mergeIntervals(intervals) {\n  if (!intervals.length) return [];\n  intervals.sort((a, b) => a.start - b.start);\n  const merged = [intervals[0]];\n  for (let i = 1; i < intervals.length; i++) {\n    const last = merged[merged.length - 1];\n    const curr = intervals[i];\n    if (curr.start <= last.end) {\n      last.end = Math.max(last.end, curr.end);\n    } else {\n      merged.push(curr);\n    }\n  }\n  return merged;\n}\n\nfunction calculateUniqueViewingTime(intervals) {\n  const merged = mergeIntervals(intervals);\n  return merged.reduce((sum, i) => sum + (i.end - i.start), 0);\n}\n\nconst ProgressTracker = ({ intervals, videoDuration }) => {\n  const uniqueTime = calculateUniqueViewingTime(intervals || []);\n  const percent = videoDuration ? (uniqueTime / videoDuration) * 100 : 0;\n\n  return (\n    <div className=\"container\" style={{ marginTop: 24 }}>\n      <h2 style={{ marginBottom: 8 }}>Progress</h2>\n      <div className=\"progress-bar\" style={{\n        marginBottom: 8,\n        height: 16,\n        background: '#eee',\n        borderRadius: 8,\n        overflow: 'hidden'\n      }}>\n        <div\n          className=\"progress\"\n          style={{\n            width: `${percent}%`,\n            height: '100%',\n            background: 'linear-gradient(90deg, #76c7c0 60%, #4fa3a0 100%)',\n            transition: 'width 0.5s'\n          }}\n        />\n      </div>\n      <div style={{ fontSize: 18, fontWeight: 600 }}>\n        {percent.toFixed(2)}% watched\n      </div>\n      <div style={{ fontSize: 13, color: '#888', marginTop: 4 }}>\n        Unique seconds watched: {uniqueTime.toFixed(1)} / {videoDuration ? videoDuration.toFixed(1) : '...'}s\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressTracker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
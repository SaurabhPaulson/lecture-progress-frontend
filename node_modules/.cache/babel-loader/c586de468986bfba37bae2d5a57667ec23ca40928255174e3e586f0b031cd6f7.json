{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gizmeon\\\\Perpetual\\\\Project\\\\Test-2\\\\lecture-progress-frontend\\\\src\\\\components\\\\VideoPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { saveProgress, fetchProgress } from '../api/progressApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER_ID = 'user1'; // Replace with real user id\nconst VIDEO_ID = 'lecture1'; // Replace with real video id\nconst VIDEO_SRC = '../'; // Place your video in public/ or use a real URL\n\nfunction mergeIntervals(intervals) {\n  if (!intervals.length) return [];\n  intervals.sort((a, b) => a.start - b.start);\n  const merged = [intervals[0]];\n  for (let i = 1; i < intervals.length; i++) {\n    const last = merged[merged.length - 1];\n    const curr = intervals[i];\n    if (curr.start <= last.end) {\n      last.end = Math.max(last.end, curr.end);\n    } else {\n      merged.push(curr);\n    }\n  }\n  return merged;\n}\nconst VideoPlayer = ({\n  onProgressUpdate\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  const [watchedIntervals, setWatchedIntervals] = useState([]);\n  const [currentInterval, setCurrentInterval] = useState(null);\n  const [videoDuration, setVideoDuration] = useState(0);\n  const [resumeTime, setResumeTime] = useState(0);\n  useEffect(() => {\n    const loadProgress = async () => {\n      try {\n        const data = await fetchProgress(USER_ID, VIDEO_ID);\n        const intervals = data.intervals || [];\n        setWatchedIntervals(intervals);\n        let last = 0;\n        if (intervals.length) {\n          const merged = mergeIntervals(intervals);\n          last = merged[merged.length - 1].end;\n        }\n        setResumeTime(last);\n        if (onProgressUpdate) onProgressUpdate(intervals, videoDuration);\n      } catch (e) {}\n    };\n    loadProgress();\n    // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    if (resumeTime && videoRef.current) {\n      videoRef.current.currentTime = resumeTime;\n    }\n  }, [resumeTime]);\n  const handleTimeUpdate = () => {\n    const video = videoRef.current;\n    if (!video) return;\n    const current = video.currentTime;\n    if (video.paused || video.ended) return;\n    if (!currentInterval) {\n      setCurrentInterval({\n        start: current,\n        end: current\n      });\n    } else {\n      setCurrentInterval({\n        ...currentInterval,\n        end: current\n      });\n    }\n  };\n  const handlePlay = () => {\n    const video = videoRef.current;\n    if (!video) return;\n    setCurrentInterval({\n      start: video.currentTime,\n      end: video.currentTime\n    });\n  };\n  const handlePauseOrEnded = async () => {\n    if (!currentInterval) return;\n    const interval = {\n      start: Math.min(currentInterval.start, currentInterval.end),\n      end: Math.max(currentInterval.start, currentInterval.end)\n    };\n    if (interval.end - interval.start < 0.5) {\n      setCurrentInterval(null);\n      return;\n    }\n    const newIntervals = mergeIntervals([...watchedIntervals, interval]);\n    setWatchedIntervals(newIntervals);\n    setCurrentInterval(null);\n    await saveProgress(USER_ID, VIDEO_ID, newIntervals, videoDuration);\n    if (onProgressUpdate) onProgressUpdate(newIntervals, videoDuration);\n  };\n  const handleLoadedMetadata = () => {\n    const video = videoRef.current;\n    if (video) setVideoDuration(video.duration);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      width: \"100%\",\n      className: \"video-player\",\n      controls: true,\n      src: VIDEO_SRC,\n      onPlay: handlePlay,\n      onPause: handlePauseOrEnded,\n      onEnded: handlePauseOrEnded,\n      onTimeUpdate: handleTimeUpdate,\n      onLoadedMetadata: handleLoadedMetadata,\n      style: {\n        borderRadius: 8,\n        boxShadow: '0 2px 8px #ccc'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: 14,\n        color: '#888',\n        marginTop: 8\n      },\n      children: [\"Video ID: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: VIDEO_ID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"kNUgOhomMBawQm2tYyQw3Kk8F1c=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","saveProgress","fetchProgress","jsxDEV","_jsxDEV","USER_ID","VIDEO_ID","VIDEO_SRC","mergeIntervals","intervals","length","sort","a","b","start","merged","i","last","curr","end","Math","max","push","VideoPlayer","onProgressUpdate","_s","videoRef","watchedIntervals","setWatchedIntervals","currentInterval","setCurrentInterval","videoDuration","setVideoDuration","resumeTime","setResumeTime","loadProgress","data","e","current","currentTime","handleTimeUpdate","video","paused","ended","handlePlay","handlePauseOrEnded","interval","min","newIntervals","handleLoadedMetadata","duration","className","children","ref","width","controls","src","onPlay","onPause","onEnded","onTimeUpdate","onLoadedMetadata","style","borderRadius","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","color","marginTop","_c","$RefreshReg$"],"sources":["C:/Gizmeon/Perpetual/Project/Test-2/lecture-progress-frontend/src/components/VideoPlayer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { saveProgress, fetchProgress } from '../api/progressApi';\n\nconst USER_ID = 'user1'; // Replace with real user id\nconst VIDEO_ID = 'lecture1'; // Replace with real video id\nconst VIDEO_SRC = '../'; // Place your video in public/ or use a real URL\n\nfunction mergeIntervals(intervals) {\n  if (!intervals.length) return [];\n  intervals.sort((a, b) => a.start - b.start);\n  const merged = [intervals[0]];\n  for (let i = 1; i < intervals.length; i++) {\n    const last = merged[merged.length - 1];\n    const curr = intervals[i];\n    if (curr.start <= last.end) {\n      last.end = Math.max(last.end, curr.end);\n    } else {\n      merged.push(curr);\n    }\n  }\n  return merged;\n}\n\nconst VideoPlayer = ({ onProgressUpdate }) => {\n  const videoRef = useRef(null);\n  const [watchedIntervals, setWatchedIntervals] = useState([]);\n  const [currentInterval, setCurrentInterval] = useState(null);\n  const [videoDuration, setVideoDuration] = useState(0);\n  const [resumeTime, setResumeTime] = useState(0);\n\n  useEffect(() => {\n    const loadProgress = async () => {\n      try {\n        const data = await fetchProgress(USER_ID, VIDEO_ID);\n        const intervals = data.intervals || [];\n        setWatchedIntervals(intervals);\n        let last = 0;\n        if (intervals.length) {\n          const merged = mergeIntervals(intervals);\n          last = merged[merged.length - 1].end;\n        }\n        setResumeTime(last);\n        if (onProgressUpdate) onProgressUpdate(intervals, videoDuration);\n      } catch (e) {}\n    };\n    loadProgress();\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (resumeTime && videoRef.current) {\n      videoRef.current.currentTime = resumeTime;\n    }\n  }, [resumeTime]);\n\n  const handleTimeUpdate = () => {\n    const video = videoRef.current;\n    if (!video) return;\n    const current = video.currentTime;\n    if (video.paused || video.ended) return;\n    if (!currentInterval) {\n      setCurrentInterval({ start: current, end: current });\n    } else {\n      setCurrentInterval({ ...currentInterval, end: current });\n    }\n  };\n\n  const handlePlay = () => {\n    const video = videoRef.current;\n    if (!video) return;\n    setCurrentInterval({ start: video.currentTime, end: video.currentTime });\n  };\n\n  const handlePauseOrEnded = async () => {\n    if (!currentInterval) return;\n    const interval = {\n      start: Math.min(currentInterval.start, currentInterval.end),\n      end: Math.max(currentInterval.start, currentInterval.end),\n    };\n    if (interval.end - interval.start < 0.5) {\n      setCurrentInterval(null);\n      return;\n    }\n    const newIntervals = mergeIntervals([...watchedIntervals, interval]);\n    setWatchedIntervals(newIntervals);\n    setCurrentInterval(null);\n    await saveProgress(USER_ID, VIDEO_ID, newIntervals, videoDuration);\n    if (onProgressUpdate) onProgressUpdate(newIntervals, videoDuration);\n  };\n\n  const handleLoadedMetadata = () => {\n    const video = videoRef.current;\n    if (video) setVideoDuration(video.duration);\n  };\n\n  return (\n    <div className=\"container\">\n      <video\n        ref={videoRef}\n        width=\"100%\"\n        className=\"video-player\"\n        controls\n        src={VIDEO_SRC}\n        onPlay={handlePlay}\n        onPause={handlePauseOrEnded}\n        onEnded={handlePauseOrEnded}\n        onTimeUpdate={handleTimeUpdate}\n        onLoadedMetadata={handleLoadedMetadata}\n        style={{ borderRadius: 8, boxShadow: '0 2px 8px #ccc' }}\n      />\n      <div style={{ fontSize: 14, color: '#888', marginTop: 8 }}>\n        Video ID: <b>{VIDEO_ID}</b>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
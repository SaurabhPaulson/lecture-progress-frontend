{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gizmeon\\\\Perpetual\\\\Project\\\\Test-2\\\\lecture-progress-frontend\\\\src\\\\components\\\\VideoPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { saveProgress } from '../api/progressApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = ({\n  userId,\n  videoId\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  const [intervals, setIntervals] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n  const handlePlay = () => {\n    setIsPlaying(true);\n    setStartTime(Date.now());\n  };\n  const handlePause = () => {\n    setIsPlaying(false);\n    const endTime = Date.now();\n    const newInterval = {\n      start: startTime,\n      end: endTime\n    };\n    setIntervals(prev => [...prev, newInterval]);\n    saveProgress(userId, videoId, newInterval);\n  };\n  const handleEnded = () => {\n    if (isPlaying) {\n      handlePause();\n    }\n  };\n  useEffect(() => {\n    const videoElement = videoRef.current;\n    if (videoElement) {\n      videoElement.addEventListener('ended', handleEnded);\n    }\n    return () => {\n      if (videoElement) {\n        videoElement.removeEventListener('ended', handleEnded);\n      }\n    };\n  }, [isPlaying]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      width: \"600\",\n      controls: true,\n      onPlay: handlePlay,\n      onPause: handlePause,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: `path/to/video/${videoId}`,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"ZXkI/0j9lKhdr8lB2gtJ8GBaO+c=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","saveProgress","jsxDEV","_jsxDEV","VideoPlayer","userId","videoId","_s","videoRef","intervals","setIntervals","isPlaying","setIsPlaying","startTime","setStartTime","handlePlay","Date","now","handlePause","endTime","newInterval","start","end","prev","handleEnded","videoElement","current","addEventListener","removeEventListener","children","ref","width","controls","onPlay","onPause","src","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Gizmeon/Perpetual/Project/Test-2/lecture-progress-frontend/src/components/VideoPlayer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { saveProgress } from '../api/progressApi';\n\nconst VideoPlayer = ({ userId, videoId }) => {\n  const videoRef = useRef(null);\n  const [intervals, setIntervals] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [startTime, setStartTime] = useState(null);\n\n  const handlePlay = () => {\n    setIsPlaying(true);\n    setStartTime(Date.now());\n  };\n\n  const handlePause = () => {\n    setIsPlaying(false);\n    const endTime = Date.now();\n    const newInterval = { start: startTime, end: endTime };\n    setIntervals((prev) => [...prev, newInterval]);\n    saveProgress(userId, videoId, newInterval);\n  };\n\n  const handleEnded = () => {\n    if (isPlaying) {\n      handlePause();\n    }\n  };\n\n  useEffect(() => {\n    const videoElement = videoRef.current;\n    if (videoElement) {\n      videoElement.addEventListener('ended', handleEnded);\n    }\n    return () => {\n      if (videoElement) {\n        videoElement.removeEventListener('ended', handleEnded);\n      }\n    };\n  }, [isPlaying]);\n\n  return (\n    <div>\n      <video\n        ref={videoRef}\n        width=\"600\"\n        controls\n        onPlay={handlePlay}\n        onPause={handlePause}\n      >\n        <source src={`path/to/video/${videoId}`} type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n    </div>\n  );\n};\n\nexport default VideoPlayer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,YAAY,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMe,UAAU,GAAGA,CAAA,KAAM;IACvBH,YAAY,CAAC,IAAI,CAAC;IAClBE,YAAY,CAACE,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBN,YAAY,CAAC,KAAK,CAAC;IACnB,MAAMO,OAAO,GAAGH,IAAI,CAACC,GAAG,CAAC,CAAC;IAC1B,MAAMG,WAAW,GAAG;MAAEC,KAAK,EAAER,SAAS;MAAES,GAAG,EAAEH;IAAQ,CAAC;IACtDT,YAAY,CAAEa,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEH,WAAW,CAAC,CAAC;IAC9CnB,YAAY,CAACI,MAAM,EAAEC,OAAO,EAAEc,WAAW,CAAC;EAC5C,CAAC;EAED,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIb,SAAS,EAAE;MACbO,WAAW,CAAC,CAAC;IACf;EACF,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACd,MAAM2B,YAAY,GAAGjB,QAAQ,CAACkB,OAAO;IACrC,IAAID,YAAY,EAAE;MAChBA,YAAY,CAACE,gBAAgB,CAAC,OAAO,EAAEH,WAAW,CAAC;IACrD;IACA,OAAO,MAAM;MACX,IAAIC,YAAY,EAAE;QAChBA,YAAY,CAACG,mBAAmB,CAAC,OAAO,EAAEJ,WAAW,CAAC;MACxD;IACF,CAAC;EACH,CAAC,EAAE,CAACb,SAAS,CAAC,CAAC;EAEf,oBACER,OAAA;IAAA0B,QAAA,eACE1B,OAAA;MACE2B,GAAG,EAAEtB,QAAS;MACduB,KAAK,EAAC,KAAK;MACXC,QAAQ;MACRC,MAAM,EAAElB,UAAW;MACnBmB,OAAO,EAAEhB,WAAY;MAAAW,QAAA,gBAErB1B,OAAA;QAAQgC,GAAG,EAAE,iBAAiB7B,OAAO,EAAG;QAAC8B,IAAI,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gDAE9D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACjC,EAAA,CAnDIH,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AAqDjB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gizmeon\\\\Perpetual\\\\Project\\\\Test-2\\\\lecture-progress-frontend\\\\src\\\\components\\\\VideoPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { saveProgress, fetchProgress } from '../api/progressApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction mergeIntervals(intervals) {\n  if (!intervals.length) return [];\n  intervals.sort((a, b) => a.start - b.start);\n  const merged = [intervals[0]];\n  for (let i = 1; i < intervals.length; i++) {\n    const last = merged[merged.length - 1];\n    const curr = intervals[i];\n    if (curr.start <= last.end) {\n      last.end = Math.max(last.end, curr.end);\n    } else {\n      merged.push(curr);\n    }\n  }\n  return merged;\n}\nconst USER_ID = 'user1'; // Replace with real user id\n\nconst VideoPlayer = ({\n  videoId,\n  videoSrc,\n  onProgressUpdate\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  const [watchedIntervals, setWatchedIntervals] = useState([]);\n  const [currentInterval, setCurrentInterval] = useState(null);\n  const [videoDuration, setVideoDuration] = useState(0);\n  const [resumeTime, setResumeTime] = useState(0);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const loadProgress = async () => {\n      setError('');\n      try {\n        const data = await fetchProgress(USER_ID, videoId);\n        const intervals = data.intervals || [];\n        setWatchedIntervals(intervals);\n        let last = 0;\n        if (intervals.length) {\n          const merged = mergeIntervals(intervals);\n          last = merged[merged.length - 1].end;\n        }\n        setResumeTime(last);\n        if (onProgressUpdate) onProgressUpdate(intervals, videoDuration);\n      } catch (e) {\n        setWatchedIntervals([]);\n        setResumeTime(0);\n        setError('No progress found for this video.');\n        if (onProgressUpdate) onProgressUpdate([], videoDuration);\n      }\n    };\n    loadProgress();\n    // eslint-disable-next-line\n  }, [videoId]);\n  useEffect(() => {\n    if (resumeTime && videoRef.current) {\n      videoRef.current.currentTime = resumeTime;\n    }\n  }, [resumeTime, videoId]);\n  const handleTimeUpdate = () => {\n    const video = videoRef.current;\n    if (!video) return;\n    const current = video.currentTime;\n    if (video.paused || video.ended) return;\n    if (!currentInterval) {\n      setCurrentInterval({\n        start: current,\n        end: current\n      });\n    } else {\n      setCurrentInterval({\n        ...currentInterval,\n        end: current\n      });\n    }\n  };\n  const handlePlay = () => {\n    const video = videoRef.current;\n    if (!video) return;\n    setCurrentInterval({\n      start: video.currentTime,\n      end: video.currentTime\n    });\n  };\n  const handlePauseOrEnded = async () => {\n    if (!currentInterval) return;\n    const interval = {\n      start: Math.min(currentInterval.start, currentInterval.end),\n      end: Math.max(currentInterval.start, currentInterval.end)\n    };\n    if (interval.end - interval.start < 0.5) {\n      setCurrentInterval(null);\n      return;\n    }\n    const newIntervals = mergeIntervals([...watchedIntervals, interval]);\n    setWatchedIntervals(newIntervals);\n    setCurrentInterval(null);\n    try {\n      await saveProgress(USER_ID, videoId, newIntervals, videoDuration);\n      if (onProgressUpdate) onProgressUpdate(newIntervals, videoDuration);\n    } catch {\n      setError('Failed to save progress. Please check your connection.');\n    }\n  };\n  const handleLoadedMetadata = () => {\n    const video = videoRef.current;\n    if (video) setVideoDuration(video.duration);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginBottom: 12\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      width: \"100%\",\n      className: \"video-player\",\n      controls: true,\n      src: videoSrc,\n      onPlay: handlePlay,\n      onPause: handlePauseOrEnded,\n      onEnded: handlePauseOrEnded,\n      onTimeUpdate: handleTimeUpdate,\n      onLoadedMetadata: handleLoadedMetadata,\n      style: {\n        borderRadius: 8,\n        boxShadow: '0 2px 8px #ccc'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: 14,\n        color: '#888',\n        marginTop: 8\n      },\n      children: [\"Video ID: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: videoId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"Li/BPQDrGwtzlBocHE0Jm/a6TaQ=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","saveProgress","fetchProgress","jsxDEV","_jsxDEV","mergeIntervals","intervals","length","sort","a","b","start","merged","i","last","curr","end","Math","max","push","USER_ID","VideoPlayer","videoId","videoSrc","onProgressUpdate","_s","videoRef","watchedIntervals","setWatchedIntervals","currentInterval","setCurrentInterval","videoDuration","setVideoDuration","resumeTime","setResumeTime","error","setError","loadProgress","data","e","current","currentTime","handleTimeUpdate","video","paused","ended","handlePlay","handlePauseOrEnded","interval","min","newIntervals","handleLoadedMetadata","duration","className","children","style","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","controls","src","onPlay","onPause","onEnded","onTimeUpdate","onLoadedMetadata","borderRadius","boxShadow","fontSize","marginTop","_c","$RefreshReg$"],"sources":["C:/Gizmeon/Perpetual/Project/Test-2/lecture-progress-frontend/src/components/VideoPlayer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { saveProgress, fetchProgress } from '../api/progressApi';\n\nfunction mergeIntervals(intervals) {\n  if (!intervals.length) return [];\n  intervals.sort((a, b) => a.start - b.start);\n  const merged = [intervals[0]];\n  for (let i = 1; i < intervals.length; i++) {\n    const last = merged[merged.length - 1];\n    const curr = intervals[i];\n    if (curr.start <= last.end) {\n      last.end = Math.max(last.end, curr.end);\n    } else {\n      merged.push(curr);\n    }\n  }\n  return merged;\n}\n\nconst USER_ID = 'user1'; // Replace with real user id\n\nconst VideoPlayer = ({ videoId, videoSrc, onProgressUpdate }) => {\n  const videoRef = useRef(null);\n  const [watchedIntervals, setWatchedIntervals] = useState([]);\n  const [currentInterval, setCurrentInterval] = useState(null);\n  const [videoDuration, setVideoDuration] = useState(0);\n  const [resumeTime, setResumeTime] = useState(0);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const loadProgress = async () => {\n      setError('');\n      try {\n        const data = await fetchProgress(USER_ID, videoId);\n        const intervals = data.intervals || [];\n        setWatchedIntervals(intervals);\n        let last = 0;\n        if (intervals.length) {\n          const merged = mergeIntervals(intervals);\n          last = merged[merged.length - 1].end;\n        }\n        setResumeTime(last);\n        if (onProgressUpdate) onProgressUpdate(intervals, videoDuration);\n      } catch (e) {\n        setWatchedIntervals([]);\n        setResumeTime(0);\n        setError('No progress found for this video.');\n        if (onProgressUpdate) onProgressUpdate([], videoDuration);\n      }\n    };\n    loadProgress();\n    // eslint-disable-next-line\n  }, [videoId]);\n\n  useEffect(() => {\n    if (resumeTime && videoRef.current) {\n      videoRef.current.currentTime = resumeTime;\n    }\n  }, [resumeTime, videoId]);\n\n  const handleTimeUpdate = () => {\n    const video = videoRef.current;\n    if (!video) return;\n    const current = video.currentTime;\n    if (video.paused || video.ended) return;\n    if (!currentInterval) {\n      setCurrentInterval({ start: current, end: current });\n    } else {\n      setCurrentInterval({ ...currentInterval, end: current });\n    }\n  };\n\n  const handlePlay = () => {\n    const video = videoRef.current;\n    if (!video) return;\n    setCurrentInterval({ start: video.currentTime, end: video.currentTime });\n  };\n\n  const handlePauseOrEnded = async () => {\n    if (!currentInterval) return;\n    const interval = {\n      start: Math.min(currentInterval.start, currentInterval.end),\n      end: Math.max(currentInterval.start, currentInterval.end),\n    };\n    if (interval.end - interval.start < 0.5) {\n      setCurrentInterval(null);\n      return;\n    }\n    const newIntervals = mergeIntervals([...watchedIntervals, interval]);\n    setWatchedIntervals(newIntervals);\n    setCurrentInterval(null);\n    try {\n      await saveProgress(USER_ID, videoId, newIntervals, videoDuration);\n      if (onProgressUpdate) onProgressUpdate(newIntervals, videoDuration);\n    } catch {\n      setError('Failed to save progress. Please check your connection.');\n    }\n  };\n\n  const handleLoadedMetadata = () => {\n    const video = videoRef.current;\n    if (video) setVideoDuration(video.duration);\n  };\n\n  return (\n    <div className=\"container\">\n      {error && <div style={{ color: 'red', marginBottom: 12 }}>{error}</div>}\n      <video\n        ref={videoRef}\n        width=\"100%\"\n        className=\"video-player\"\n        controls\n        src={videoSrc}\n        onPlay={handlePlay}\n        onPause={handlePauseOrEnded}\n        onEnded={handlePauseOrEnded}\n        onTimeUpdate={handleTimeUpdate}\n        onLoadedMetadata={handleLoadedMetadata}\n        style={{ borderRadius: 8, boxShadow: '0 2px 8px #ccc' }}\n      />\n      <div style={{ fontSize: 14, color: '#888', marginTop: 8 }}>\n        Video ID: <b>{videoId}</b>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
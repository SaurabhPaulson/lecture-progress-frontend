{"ast":null,"code":"const API_URL = process.env.REACT_APP_API_URL;\nexport const fetchProgress = async (userId, videoId) => {\n  const response = await fetch(`${API_URL}/api/progress/${userId}/${videoId}`);\n  if (!response.ok) throw new Error('Failed to fetch progress');\n  return await response.json();\n};\nexport const saveProgress = async (userId, videoId, intervals, videoDuration) => {\n  const response = await fetch({\n    API_URL\n  } / api / progress, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      userId,\n      videoId,\n      intervals,\n      videoDuration\n    })\n  });\n  if (!response.ok) throw new Error('Failed to save progress');\n  return await response.json();\n};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","fetchProgress","userId","videoId","response","fetch","ok","Error","json","saveProgress","intervals","videoDuration","api","progress","method","headers","body","JSON","stringify"],"sources":["C:/Gizmeon/Perpetual/Project/Test-2/lecture-progress-frontend/src/api/progressApi.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL\n\nexport const fetchProgress = async (userId, videoId) => {\n  const response = await fetch(`${API_URL}/api/progress/${userId}/${videoId}`);\n  if (!response.ok) throw new Error('Failed to fetch progress');\n  return await response.json();\n};\n\nexport const saveProgress = async (userId, videoId, intervals, videoDuration) => {\n  const response = await fetch({API_URL}/api/progress, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ userId, videoId, intervals, videoDuration }),\n  });\n  if (!response.ok) throw new Error('Failed to save progress');\n  return await response.json();\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE7C,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,MAAM,EAAEC,OAAO,KAAK;EACtD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,OAAO,iBAAiBK,MAAM,IAAIC,OAAO,EAAE,CAAC;EAC5E,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC7D,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOP,MAAM,EAAEC,OAAO,EAAEO,SAAS,EAAEC,aAAa,KAAK;EAC/E,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC;IAACR;EAAO,CAAC,GAACe,GAAG,GAACC,QAAQ,EAAE;IACnDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEhB,MAAM;MAAEC,OAAO;MAAEO,SAAS;MAAEC;IAAc,CAAC;EACpE,CAAC,CAAC;EACF,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5D,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}